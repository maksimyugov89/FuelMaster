// Mocks generated by Mockito 5.4.6 from annotations
// in fuelmaster/test/providers/car_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fuelmaster/utils/database_helper.dart' as _i3;
import 'package:fuelmaster/utils/models/car_data.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i4.Future<_i2.Database>);

  @override
  _i4.Future<List<String>> getAllPresetBrands() => (super.noSuchMethod(
        Invocation.method(
          #getAllPresetBrands,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<List<String>> getPresetBrandsByVehicleType(String? vehicleType) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPresetBrandsByVehicleType,
          [vehicleType],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<List<String>> getPresetModelsByBrandAndType(
    String? brand,
    String? vehicleType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPresetModelsByBrandAndType,
          [
            brand,
            vehicleType,
          ],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<List<String>> getPresetGenerations(
    String? brand,
    String? model,
    String? vehicleType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPresetGenerations,
          [
            brand,
            model,
            vehicleType,
          ],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<List<String>> getPresetModifications(
    String? brand,
    String? model,
    String? generation,
    String? vehicleType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPresetModifications,
          [
            brand,
            model,
            generation,
            vehicleType,
          ],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<_i5.CarData?> getFullCarData(
    String? brand,
    String? model,
    String? generation,
    String? modification,
    String? vehicleType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFullCarData,
          [
            brand,
            model,
            generation,
            modification,
            vehicleType,
          ],
        ),
        returnValue: _i4.Future<_i5.CarData?>.value(),
      ) as _i4.Future<_i5.CarData?>);

  @override
  _i4.Future<bool> isLicensePlateUnique(
    String? licensePlate, [
    int? excludeCarId,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #isLicensePlateUnique,
          [
            licensePlate,
            excludeCarId,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> deleteCarByModel(String? model) => (super.noSuchMethod(
        Invocation.method(
          #deleteCarByModel,
          [model],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> insertCar(_i5.CarData? car) => (super.noSuchMethod(
        Invocation.method(
          #insertCar,
          [car],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.CarData>> getCars() => (super.noSuchMethod(
        Invocation.method(
          #getCars,
          [],
        ),
        returnValue: _i4.Future<List<_i5.CarData>>.value(<_i5.CarData>[]),
      ) as _i4.Future<List<_i5.CarData>>);

  @override
  _i4.Future<List<_i5.CarData>> getUserCars() => (super.noSuchMethod(
        Invocation.method(
          #getUserCars,
          [],
        ),
        returnValue: _i4.Future<List<_i5.CarData>>.value(<_i5.CarData>[]),
      ) as _i4.Future<List<_i5.CarData>>);

  @override
  _i4.Future<void> updateCar(_i5.CarData? car) => (super.noSuchMethod(
        Invocation.method(
          #updateCar,
          [car],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteCar(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCar,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> migrateFromSharedPreferences() => (super.noSuchMethod(
        Invocation.method(
          #migrateFromSharedPreferences,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> addPresetCars(List<_i5.CarData>? cars) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPresetCars,
          [cars],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> syncCarsWithFirestore(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #syncCarsWithFirestore,
          [uid],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
